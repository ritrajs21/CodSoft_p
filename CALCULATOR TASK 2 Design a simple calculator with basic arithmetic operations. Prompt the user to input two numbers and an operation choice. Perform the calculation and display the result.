import tkinter as tk
from tkinter import messagebox

class ToDoApp:
    def _init_(self, root):
        self.root = root
        self.root.title("To-Do List App")

        self.tasks = []

        self.frame = tk.Frame(self.root)
        self.frame.pack(pady=10)

        self.task_entry = tk.Entry(self.frame, width=40)
        self.task_entry.pack(side=tk.LEFT, padx=(0, 10))

        self.add_button = tk.Button(self.frame, text="Add Task", command=self.add_task)
        self.add_button.pack(side=tk.LEFT)

        self.listbox = tk.Listbox(self.root, width=50, height=10)
        self.listbox.pack(pady=10)

        self.complete_button = tk.Button(self.root, text="Mark as Complete", command=self.mark_complete)
        self.complete_button.pack(pady=(0, 5))

        self.delete_button = tk.Button(self.root, text="Delete Task", command=self.delete_task)
        self.delete_button.pack()

    def add_task(self):
        task = self.task_entry.get()
        if task:
            self.tasks.append({"title": task, "completed": False})
            self.refresh_tasks()
            self.task_entry.delete(0, tk.END)
        else:
            messagebox.showwarning("Input Error", "Task cannot be empty.")

    def refresh_tasks(self):
        self.listbox.delete(0, tk.END)
        for task in self.tasks:
            status = "✓" if task["completed"] else "✗"
            self.listbox.insert(tk.END, f"[{status}] {task['title']}")

    def mark_complete(self):
        selected = self.listbox.curselection()
        if selected:
            index = selected[0]
            self.tasks[index]["completed"] = True
            self.refresh_tasks()
        else:
            messagebox.showinfo("Selection Error", "No task selected.")

    def delete_task(self):
        selected = self.listbox.curselection()
        if selected:
            index = selected[0]
            del self.tasks[index]
            self.refresh_tasks()
        else:
            messagebox.showinfo("Selection Error", "No task selected.")

# Run the app
if _name_ == "_main_":
    root = tk.Tk()
    app = ToDoApp(root)
    root.mainloop()
